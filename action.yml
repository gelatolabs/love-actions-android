name: Love actions for Android
description: Android CI/CD for LÖVE based games
branding:
  icon: "heart"
  color: "green"
inputs:
  app-name:
    description: |
      App display name
      Would be used in app/src/main/AndroidManifest.xml
    required: false
    default: "LÖVE for Android"
  bundle-id:
    description: |
      App bundle id
      Would be used in app/build.gradle
    required: false
    default: "org.love2d.android"
  resource-path:
    description: |
      Path to the resources folder
      Would copy all contents to app/src/main/res
      Top folder not included
    required: true
  icon-specifier:
    description: |
      Icon specifier
      Would be used in app/src/main/AndroidManifest.xml
    required: false
    default: "@drawable/love"
  love-ref:
    description: |
      love-android git ref
      Could be commit hash, tags or branch name
    required: false
    default: "11.5a"
  love-patch:
    description: |
      Git patch file path for the love-android repo
      The patch must start from `love-ref`
      You can use `git diff` to get the patch file
    required: false
  love-package:
    description: |
      Love package
      Would be added to app/src/embed/assets/
    required: false
    default: "game.love"
  libs-path:
    description: |
      Path to the libs folder
      Would copy all contents to app/libs
      Top folder not included
    required: false
  needs-microphone:
    description: |
      Whether it needs to use the microphone
    required: false
    default: false
  extra-assets:
    description: |
      List of folder & file paths to be added to app/src/embed/assets/
      Don't need global quotes, separated by spaces
      Looks like: assets/ logics/ main.lua config.lua
    required: false
  custom-scheme:
    description: |
      Custom URL scheme, looks like "demo_scheme://demo_host"
      Would be used in app/src/main/AndroidManifest.xml
    required: false
  product-name:
    description: |
      Base name of the package
      Would be used to rename products
    required: false
    default: "love-app"
  version-string:
    description: |
      App version string
      Recommand using 3 numbers seperated by dots
      Looks like 3.2.1
    required: false
    default: "11.5a"
  version-code:
    description: |
      App version code
      One number, usually the same as version string without dots
      Looks like 321
    required: false
    default: "32"
  output-folder:
    description: |
      Packages output folder
      All packages would be placed here
    required: false
    default: "build"
  keystore-alias:
    description: |
      Keystore alias
      Would be used to sign the app
    required: false
  keystore-base64:
    description: |
      Keystore base64 content
      Would be used to sign the app
    required: false
  keystore-key-password:
    description: |
      Keystore key password
      Would be used to sign the app
    required: false
  keystore-store-password:
    description: |
      Keystore store password
      Would be used to sign the app
      Usually the same as keystore-key-password
    required: false
  love-actions-folder:
    description: |
      Path to the love-actions-android folder
      Would be used to checkout the love-actions-android and love-android repo
    required: false
    default: "love-actions-android"
outputs:
  package-paths:
    description: |
      Paths to the built packages in a bash list
      Would be paths relative to repository root, separated by spaces
      Looks like: build/game.apk build/game.abb
    value: ${{ steps.gather-packages.outputs.package-paths }}
runs:
  using: composite
  steps:
    - name: Create directories
      shell: bash
      run: |
        mkdir -p ${{ inputs.love-actions-folder }}
        mkdir -p ${{ inputs.output-folder }}
    - name: Get Java
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: "17"
    - name: Checkout love-android
      uses: actions/checkout@v4
      with:
        repository: love2d/love-android
        ref: ${{ inputs.love-ref }}
        submodules: recursive
        path: ${{ inputs.love-actions-folder }}/love-android
    - name: Apply love-android patch
      if: "${{ inputs.love-patch != '' }}"
      shell: bash
      run: |
        cp ${{ inputs.love-patch }} ${{ inputs.love-actions-folder }}/love-android/love.patch
        cd ${{ inputs.love-actions-folder }}/love-android
        git apply ./love.patch
    - name: Copy resources
      shell: bash
      run: |
        cp -r -f ${{ inputs.resource-path }}/* ${{ inputs.love-actions-folder }}/love-android/app/src/main/res/
    - name: Extract love package
      shell: bash
      run: |
        7z x ${{ inputs.love-package }} -o${{ inputs.love-actions-folder }}/love-android/app/src/embed/assets/
    - name: Add libs
      if: "${{ inputs.libs-path != '' }}"
      shell: bash
      run: |
        mkdir -p ${{ inputs.love-actions-folder }}/love-android/app/libs/
        cp -r -f ${{ inputs.libs-path }}/* ${{ inputs.love-actions-folder }}/love-android/app/libs/
    - name: Add extra assets
      if: "${{ inputs.extra-assets != '' }}"
      shell: bash
      run: |
        cp -r -f ${{ inputs.extra-assets }} ${{ inputs.love-actions-folder }}/love-android/app/src/embed/assets/
    - name: Update android information
      shell: python
      run: |
        with open("${{ inputs.love-actions-folder }}/love-android/app/build.gradle", "r+", encoding="utf-8") as file:
          data = file.read()
          insert_pos = data.find("\n", data.find("proguardFiles")) + 1
          data = data[:insert_pos] + "            signingConfig signingConfigs.release\n" + data[insert_pos:]
          insert_pos = data.find("buildTypes") - 4
          data = data[:insert_pos] + "    signingConfigs {\n" \
                                     "        release {\n" \
                                     "            storeFile file('./android.keystore')\n" \
                                     "            keyAlias '${{ inputs.keystore-alias }}'\n" \
                                     "            keyPassword '${{ inputs.keystore-key-password }}'\n" \
                                     "            storePassword '${{ inputs.keystore-store-password }}'\n" \
                                     "        }\n" \
                                     "    }\n" + data[insert_pos:]
          if "${{ inputs.libs-path }}":
            print("Adding app/libs to build phases...")
            insert_pos = data.find("buildTypes") - 4
            data = data[:insert_pos] + "    sourceSets {\n" \
                                       "        main {\n" \
                                       "            jniLibs.srcDir(['libs'])\n" \
                                       "        }\n" \
                                       "    }\n" + data[insert_pos:]
          file.seek(0)
          file.truncate()
          file.write(data)
        with open("${{ inputs.love-actions-folder }}/love-android/app/src/main/AndroidManifest.xml", "r+", encoding="utf-8") as file:
          data = file.read()
          data = data\
            .replace("OpenGL ES 2.0", "OpenGL ES 3.0")\
            .replace("0x00020000", "0x00030000")\
            .replace("@drawable/love", "${{ inputs.icon-specifier }}")
          try:
            scheme = "${{ inputs.custom-scheme }}".split("://")[0]
            host = "${{ inputs.custom-scheme }}".split("://")[1]
            if scheme != "" and host != "":
              data = data[:data.rfind("</intent-filter>") + 16] + '''
                    <intent-filter>
                      <action android:name="android.intent.action.VIEW" />
                      <category android:name="android.intent.category.DEFAULT" />
                      <category android:name="android.intent.category.BROWSABLE" />
                      <data android:scheme="''' + scheme + '''" android:host="''' + host + '''" />
                    </intent-filter>''' + data[data.rfind("</intent-filter>") + 16:]
          except:
            pass
          file.seek(0)
          file.truncate()
          file.write(data)
        with open("${{ inputs.love-actions-folder }}/love-android/gradle.properties", "w", encoding="utf-8") as file:
          data = (
            f"app.name_byte_array={','.join(map(str, '${{ inputs.app-name }}'.encode()))}\n"
            f"app.application_id=${{ inputs.bundle-id }}\n"
            "app.orientation=landscape\n"
            f"app.version_code=${{ inputs.version-code }}\n"
            f"app.version_name=${{ inputs.version-string }}\n"
            "android.enableJetifier=false\n"
            "android.useAndroidX=true\n"
            "android.defaults.buildfeatures.buildconfig=true\n"
            "android.nonTransitiveRClass=true\n"
            "android.nonFinalResIds=true\n"
            "org.gradle.caching=true\n"
          )
          file.write(data)
    - name: Cache NDK
      uses: actions/cache@v4
      with:
        path: /usr/local/lib/android/sdk/ndk/25.2.9519653
        key: ndk-25.2.9519653
    - name: Build package (Debug)
      uses: burrunan/gradle-cache-action@v2
      with:
        arguments: ${{ inputs.needs-microphone && 'assembleEmbedRecordDebug' || 'assembleEmbedNoRecordDebug' }}
        build-root-directory: ${{ inputs.love-actions-folder }}/love-android
        concurrent: true
        gradle-build-scan-report: false
        gradle-distribution-sha-256-sum-warning: false
    - name: Rename package (Debug)
      shell: bash
      run: |
        mv ${{ inputs.love-actions-folder }}/love-android/app/build/outputs/apk/embed${{ inputs.needs-microphone && 'Record' || 'NoRecord' }}/debug/app-embed-${{ inputs.needs-microphone && 'record' || 'noRecord' }}-debug.apk ${{ inputs.output-folder }}/${{ inputs.product-name }}-debug.apk
    - name: Pre build (Release)
      if: "${{ inputs.keystore-alias != '' && inputs.keystore-base64 != '' && inputs.keystore-key-password != '' && inputs.keystore-store-password != '' }}"
      shell: bash
      run: |
        echo "${{ inputs.keystore-base64 }}" | base64 -d > ${{ inputs.love-actions-folder }}/love-android/app/android.keystore
    - name: Build package (Release)
      uses: burrunan/gradle-cache-action@v2
      if: "${{ inputs.keystore-alias != '' && inputs.keystore-base64 != '' && inputs.keystore-key-password != '' && inputs.keystore-store-password != '' }}"
      with:
        arguments: ${{ inputs.needs-microphone && 'assembleEmbedRecordRelease' || 'assembleEmbedNoRecordRelease' }}
        build-root-directory: ${{ inputs.love-actions-folder }}/love-android
        concurrent: true
        gradle-build-scan-report: false
        gradle-distribution-sha-256-sum-warning: false
        execution-only-caches: true
    - name: Rename package (Release)
      if: "${{ inputs.keystore-alias != '' && inputs.keystore-base64 != '' && inputs.keystore-key-password != '' && inputs.keystore-store-password != '' }}"
      shell: bash
      run: mv ${{ inputs.love-actions-folder }}/love-android/app/build/outputs/apk/embed${{ inputs.needs-microphone && 'Record' || 'NoRecord' }}/release/app-embed-${{ inputs.needs-microphone && 'record' || 'noRecord' }}-release.apk ${{ inputs.output-folder }}/${{ inputs.product-name }}-release.apk
    - name: Gather packages in output folder
      id: gather-packages
      shell: bash
      run: |
        echo "package-paths=$(ls -d ${{ inputs.output-folder }}/* | tr '\r\n' ' ')" >> $GITHUB_OUTPUT
